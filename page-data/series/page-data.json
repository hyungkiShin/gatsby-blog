{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"hyungkishin.blog"}},"allMarkdownRemark":{"group":[{"fieldValue":"배포","totalCount":1},{"fieldValue":"코틀린","totalCount":3}],"nodes":[{"excerpt":"자바에는 있는데 코틀린엔 없는기능 체크드 익셉션(Checked Exception) 자바의 익셉션 계층  Throwable : 예외 계층의 최상위 클래스 Error : 시스템에 비정상적인 상황이 발생 예측이 어렵고 기본적으로 복구가 불가능 함 e.g) OutOfMemoryError, StackOverflowError, etc Exception : 시스템에서…","fields":{"slug":"/02. 자바와 코틀린의 차이점/"},"frontmatter":{"date":"January 12, 2024","update":"Jan 12, 2024","title":"자바와 코틀린의 차이점","tags":["코틀린"],"series":null}},{"excerpt":"코들린의 현재와 미래 코틀린을 배워야하는 이유 코틀린은 IntelliJ로 유명한 젯브레인사에서 만든 언어이기 때문에 IntelliJ에서 자동완성, 자 바-코틀린 변환, 코루틴 등 코틀린 관련 편의 기능을 완벽하게 지원 자바는 발표된지 20년이 넘었지만 코틀린, C#, 스위프트와 같은 현대적 언어에 비해 기능 이 부족함 자바에서 Best-Practice로 …","fields":{"slug":"/01 코들린의 현재와 미래/"},"frontmatter":{"date":"January 12, 2024","update":"Jan 12, 2024","title":"코틀린의 현재와 미래","tags":["코틀린"],"series":null}},{"excerpt":"공식문서 https://docs.spring.io/spring-framework/reference/web/webmvc/mvc-servlet.html 공식 문서의 샘플 코드를 보면 kotlin 탭을 제공  Spring initializr 기본 언어로 코틀린을 선택할 수 있고 코틀린인 경우 Gradle Project를 선택하면 빌드 설정 을 기반으로 생성해준…","fields":{"slug":"/03. 코틀린 의 spring 지원/"},"frontmatter":{"date":"January 12, 2024","update":"Jan 12, 2024","title":"코틀린의 spring 지원","tags":["코틀린"],"series":null}},{"excerpt":"배포 전략에 관하여 문득 dev 환경에서 테스트를 할겸 \n열씸히 dev 브렌치를 merge 후 열씸히 젠킨스 빌드버튼을 누르던 중  배포 전략에 대한 내용을 생각해보게 되었습니다.  배포 전략 ? 모놀리틱 서비스 환경에서 마이크로 서비스 환경으로 바뀌면서 배포 주기가 짧아졌기 때문에 \n배포 전략이 필요하게 되었답니다.  중단 배포 방식, 다운타임 (Dow…","fields":{"slug":"/deploy-strategy/"},"frontmatter":{"date":"November 18, 2022","update":"Nov 18, 2022","title":"배포전략","tags":["배포"],"series":null}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}